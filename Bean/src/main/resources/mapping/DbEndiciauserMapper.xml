<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.DbEndiciauserMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.DbEndiciauser">
    <id column="SEQUENCEID" jdbcType="VARCHAR" property="sequenceid" />
    <result column="REQUESTERID" jdbcType="VARCHAR" property="requesterid" />
    <result column="ACCOUNTID" jdbcType="VARCHAR" property="accountid" />
    <result column="FROMCOMPANY" jdbcType="VARCHAR" property="fromcompany" />
    <result column="RETURNADDRESS" jdbcType="VARCHAR" property="returnaddress" />
    <result column="FROMCITY" jdbcType="VARCHAR" property="fromcity" />
    <result column="FROMSTATE" jdbcType="VARCHAR" property="fromstate" />
    <result column="FROMPOSTALCODE" jdbcType="VARCHAR" property="frompostalcode" />
    <result column="FROMZIP4" jdbcType="VARCHAR" property="fromzip4" />
    <result column="FROMCOUNTRY" jdbcType="VARCHAR" property="fromcountry" />
    <result column="FROMPHONE" jdbcType="VARCHAR" property="fromphone" />
    <result column="FROMEMAIL" jdbcType="VARCHAR" property="fromemail" />
    <result column="FLAG" jdbcType="DECIMAL" property="flag" />
    <result column="OPER" jdbcType="VARCHAR" property="oper" />
    <result column="OPERTIME" jdbcType="TIMESTAMP" property="opertime" />
    <result column="UPDATEFLAG" jdbcType="DECIMAL" property="updateflag" />
    <result column="RECREDITAMOUNT" jdbcType="DECIMAL" property="recreditamount" />
    <result column="POSTAGEBALANCE" jdbcType="DECIMAL" property="postagebalance" />
    <result column="ASCENDINGBALANCE" jdbcType="DECIMAL" property="ascendingbalance" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.model.DbEndiciauser">
    <result column="PASSPHRASE" jdbcType="LONGVARCHAR" property="passphrase" />
    <result column="FROMNAME" jdbcType="LONGVARCHAR" property="fromname" />
    <result column="UPDATEDESCR" jdbcType="LONGVARCHAR" property="updatedescr" />
  </resultMap>
  <sql id="Base_Column_List">
    SEQUENCEID, REQUESTERID, ACCOUNTID, FROMCOMPANY, RETURNADDRESS, FROMCITY, FROMSTATE, 
    FROMPOSTALCODE, FROMZIP4, FROMCOUNTRY, FROMPHONE, FROMEMAIL, FLAG, OPER, OPERTIME, 
    UPDATEFLAG, RECREDITAMOUNT, POSTAGEBALANCE, ASCENDINGBALANCE
  </sql>
  <sql id="Blob_Column_List">
    PASSPHRASE, FROMNAME, UPDATEDESCR
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from db_endiciauser
    where SEQUENCEID = #{sequenceid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from db_endiciauser
    where SEQUENCEID = #{sequenceid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bean.model.DbEndiciauser">
    insert into db_endiciauser (SEQUENCEID, REQUESTERID, ACCOUNTID, 
      FROMCOMPANY, RETURNADDRESS, FROMCITY, 
      FROMSTATE, FROMPOSTALCODE, FROMZIP4, 
      FROMCOUNTRY, FROMPHONE, FROMEMAIL, 
      FLAG, OPER, OPERTIME, 
      UPDATEFLAG, RECREDITAMOUNT, POSTAGEBALANCE, 
      ASCENDINGBALANCE, PASSPHRASE, FROMNAME, 
      UPDATEDESCR)
    values (#{sequenceid,jdbcType=VARCHAR}, #{requesterid,jdbcType=VARCHAR}, #{accountid,jdbcType=VARCHAR}, 
      #{fromcompany,jdbcType=VARCHAR}, #{returnaddress,jdbcType=VARCHAR}, #{fromcity,jdbcType=VARCHAR}, 
      #{fromstate,jdbcType=VARCHAR}, #{frompostalcode,jdbcType=VARCHAR}, #{fromzip4,jdbcType=VARCHAR}, 
      #{fromcountry,jdbcType=VARCHAR}, #{fromphone,jdbcType=VARCHAR}, #{fromemail,jdbcType=VARCHAR}, 
      #{flag,jdbcType=DECIMAL}, #{oper,jdbcType=VARCHAR}, #{opertime,jdbcType=TIMESTAMP}, 
      #{updateflag,jdbcType=DECIMAL}, #{recreditamount,jdbcType=DECIMAL}, #{postagebalance,jdbcType=DECIMAL}, 
      #{ascendingbalance,jdbcType=DECIMAL}, #{passphrase,jdbcType=LONGVARCHAR}, #{fromname,jdbcType=LONGVARCHAR}, 
      #{updatedescr,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.model.DbEndiciauser">
    insert into db_endiciauser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sequenceid != null">
        SEQUENCEID,
      </if>
      <if test="requesterid != null">
        REQUESTERID,
      </if>
      <if test="accountid != null">
        ACCOUNTID,
      </if>
      <if test="fromcompany != null">
        FROMCOMPANY,
      </if>
      <if test="returnaddress != null">
        RETURNADDRESS,
      </if>
      <if test="fromcity != null">
        FROMCITY,
      </if>
      <if test="fromstate != null">
        FROMSTATE,
      </if>
      <if test="frompostalcode != null">
        FROMPOSTALCODE,
      </if>
      <if test="fromzip4 != null">
        FROMZIP4,
      </if>
      <if test="fromcountry != null">
        FROMCOUNTRY,
      </if>
      <if test="fromphone != null">
        FROMPHONE,
      </if>
      <if test="fromemail != null">
        FROMEMAIL,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="oper != null">
        OPER,
      </if>
      <if test="opertime != null">
        OPERTIME,
      </if>
      <if test="updateflag != null">
        UPDATEFLAG,
      </if>
      <if test="recreditamount != null">
        RECREDITAMOUNT,
      </if>
      <if test="postagebalance != null">
        POSTAGEBALANCE,
      </if>
      <if test="ascendingbalance != null">
        ASCENDINGBALANCE,
      </if>
      <if test="passphrase != null">
        PASSPHRASE,
      </if>
      <if test="fromname != null">
        FROMNAME,
      </if>
      <if test="updatedescr != null">
        UPDATEDESCR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sequenceid != null">
        #{sequenceid,jdbcType=VARCHAR},
      </if>
      <if test="requesterid != null">
        #{requesterid,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="fromcompany != null">
        #{fromcompany,jdbcType=VARCHAR},
      </if>
      <if test="returnaddress != null">
        #{returnaddress,jdbcType=VARCHAR},
      </if>
      <if test="fromcity != null">
        #{fromcity,jdbcType=VARCHAR},
      </if>
      <if test="fromstate != null">
        #{fromstate,jdbcType=VARCHAR},
      </if>
      <if test="frompostalcode != null">
        #{frompostalcode,jdbcType=VARCHAR},
      </if>
      <if test="fromzip4 != null">
        #{fromzip4,jdbcType=VARCHAR},
      </if>
      <if test="fromcountry != null">
        #{fromcountry,jdbcType=VARCHAR},
      </if>
      <if test="fromphone != null">
        #{fromphone,jdbcType=VARCHAR},
      </if>
      <if test="fromemail != null">
        #{fromemail,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=DECIMAL},
      </if>
      <if test="oper != null">
        #{oper,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null">
        #{opertime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateflag != null">
        #{updateflag,jdbcType=DECIMAL},
      </if>
      <if test="recreditamount != null">
        #{recreditamount,jdbcType=DECIMAL},
      </if>
      <if test="postagebalance != null">
        #{postagebalance,jdbcType=DECIMAL},
      </if>
      <if test="ascendingbalance != null">
        #{ascendingbalance,jdbcType=DECIMAL},
      </if>
      <if test="passphrase != null">
        #{passphrase,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromname != null">
        #{fromname,jdbcType=LONGVARCHAR},
      </if>
      <if test="updatedescr != null">
        #{updatedescr,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.DbEndiciauser">
    update db_endiciauser
    <set>
      <if test="requesterid != null">
        REQUESTERID = #{requesterid,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null">
        ACCOUNTID = #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="fromcompany != null">
        FROMCOMPANY = #{fromcompany,jdbcType=VARCHAR},
      </if>
      <if test="returnaddress != null">
        RETURNADDRESS = #{returnaddress,jdbcType=VARCHAR},
      </if>
      <if test="fromcity != null">
        FROMCITY = #{fromcity,jdbcType=VARCHAR},
      </if>
      <if test="fromstate != null">
        FROMSTATE = #{fromstate,jdbcType=VARCHAR},
      </if>
      <if test="frompostalcode != null">
        FROMPOSTALCODE = #{frompostalcode,jdbcType=VARCHAR},
      </if>
      <if test="fromzip4 != null">
        FROMZIP4 = #{fromzip4,jdbcType=VARCHAR},
      </if>
      <if test="fromcountry != null">
        FROMCOUNTRY = #{fromcountry,jdbcType=VARCHAR},
      </if>
      <if test="fromphone != null">
        FROMPHONE = #{fromphone,jdbcType=VARCHAR},
      </if>
      <if test="fromemail != null">
        FROMEMAIL = #{fromemail,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=DECIMAL},
      </if>
      <if test="oper != null">
        OPER = #{oper,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null">
        OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateflag != null">
        UPDATEFLAG = #{updateflag,jdbcType=DECIMAL},
      </if>
      <if test="recreditamount != null">
        RECREDITAMOUNT = #{recreditamount,jdbcType=DECIMAL},
      </if>
      <if test="postagebalance != null">
        POSTAGEBALANCE = #{postagebalance,jdbcType=DECIMAL},
      </if>
      <if test="ascendingbalance != null">
        ASCENDINGBALANCE = #{ascendingbalance,jdbcType=DECIMAL},
      </if>
      <if test="passphrase != null">
        PASSPHRASE = #{passphrase,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromname != null">
        FROMNAME = #{fromname,jdbcType=LONGVARCHAR},
      </if>
      <if test="updatedescr != null">
        UPDATEDESCR = #{updatedescr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SEQUENCEID = #{sequenceid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.model.DbEndiciauser">
    update db_endiciauser
    set REQUESTERID = #{requesterid,jdbcType=VARCHAR},
      ACCOUNTID = #{accountid,jdbcType=VARCHAR},
      FROMCOMPANY = #{fromcompany,jdbcType=VARCHAR},
      RETURNADDRESS = #{returnaddress,jdbcType=VARCHAR},
      FROMCITY = #{fromcity,jdbcType=VARCHAR},
      FROMSTATE = #{fromstate,jdbcType=VARCHAR},
      FROMPOSTALCODE = #{frompostalcode,jdbcType=VARCHAR},
      FROMZIP4 = #{fromzip4,jdbcType=VARCHAR},
      FROMCOUNTRY = #{fromcountry,jdbcType=VARCHAR},
      FROMPHONE = #{fromphone,jdbcType=VARCHAR},
      FROMEMAIL = #{fromemail,jdbcType=VARCHAR},
      FLAG = #{flag,jdbcType=DECIMAL},
      OPER = #{oper,jdbcType=VARCHAR},
      OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      UPDATEFLAG = #{updateflag,jdbcType=DECIMAL},
      RECREDITAMOUNT = #{recreditamount,jdbcType=DECIMAL},
      POSTAGEBALANCE = #{postagebalance,jdbcType=DECIMAL},
      ASCENDINGBALANCE = #{ascendingbalance,jdbcType=DECIMAL},
      PASSPHRASE = #{passphrase,jdbcType=LONGVARCHAR},
      FROMNAME = #{fromname,jdbcType=LONGVARCHAR},
      UPDATEDESCR = #{updatedescr,jdbcType=LONGVARCHAR}
    where SEQUENCEID = #{sequenceid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.DbEndiciauser">
    update db_endiciauser
    set REQUESTERID = #{requesterid,jdbcType=VARCHAR},
      ACCOUNTID = #{accountid,jdbcType=VARCHAR},
      FROMCOMPANY = #{fromcompany,jdbcType=VARCHAR},
      RETURNADDRESS = #{returnaddress,jdbcType=VARCHAR},
      FROMCITY = #{fromcity,jdbcType=VARCHAR},
      FROMSTATE = #{fromstate,jdbcType=VARCHAR},
      FROMPOSTALCODE = #{frompostalcode,jdbcType=VARCHAR},
      FROMZIP4 = #{fromzip4,jdbcType=VARCHAR},
      FROMCOUNTRY = #{fromcountry,jdbcType=VARCHAR},
      FROMPHONE = #{fromphone,jdbcType=VARCHAR},
      FROMEMAIL = #{fromemail,jdbcType=VARCHAR},
      FLAG = #{flag,jdbcType=DECIMAL},
      OPER = #{oper,jdbcType=VARCHAR},
      OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      UPDATEFLAG = #{updateflag,jdbcType=DECIMAL},
      RECREDITAMOUNT = #{recreditamount,jdbcType=DECIMAL},
      POSTAGEBALANCE = #{postagebalance,jdbcType=DECIMAL},
      ASCENDINGBALANCE = #{ascendingbalance,jdbcType=DECIMAL}
    where SEQUENCEID = #{sequenceid,jdbcType=VARCHAR}
  </update>
</mapper>