<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.DbAlifeedbackorderMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.DbAlifeedbackorder">
    <id column="TRADEID" jdbcType="VARCHAR" property="tradeid" />
    <result column="FEEDBACKTIME" jdbcType="TIMESTAMP" property="feedbacktime" />
    <result column="FLAG" jdbcType="VARCHAR" property="flag" />
    <result column="SHOPID" jdbcType="VARCHAR" property="shopid" />
    <result column="UPDATEFLAG" jdbcType="VARCHAR" property="updateflag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.model.DbAlifeedbackorder">
    <result column="DESCR" jdbcType="LONGVARCHAR" property="descr" />
  </resultMap>
  <sql id="Base_Column_List">
    TRADEID, FEEDBACKTIME, FLAG, SHOPID, UPDATEFLAG
  </sql>
  <sql id="Blob_Column_List">
    DESCR
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from db_alifeedbackorder
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from db_alifeedbackorder
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bean.model.DbAlifeedbackorder">
    insert into db_alifeedbackorder (TRADEID, FEEDBACKTIME, FLAG, 
      SHOPID, UPDATEFLAG, DESCR
      )
    values (#{tradeid,jdbcType=VARCHAR}, #{feedbacktime,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR}, 
      #{shopid,jdbcType=VARCHAR}, #{updateflag,jdbcType=VARCHAR}, #{descr,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.model.DbAlifeedbackorder">
    insert into db_alifeedbackorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeid != null">
        TRADEID,
      </if>
      <if test="feedbacktime != null">
        FEEDBACKTIME,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="shopid != null">
        SHOPID,
      </if>
      <if test="updateflag != null">
        UPDATEFLAG,
      </if>
      <if test="descr != null">
        DESCR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeid != null">
        #{tradeid,jdbcType=VARCHAR},
      </if>
      <if test="feedbacktime != null">
        #{feedbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="updateflag != null">
        #{updateflag,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.DbAlifeedbackorder">
    update db_alifeedbackorder
    <set>
      <if test="feedbacktime != null">
        FEEDBACKTIME = #{feedbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        SHOPID = #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="updateflag != null">
        UPDATEFLAG = #{updateflag,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        DESCR = #{descr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.model.DbAlifeedbackorder">
    update db_alifeedbackorder
    set FEEDBACKTIME = #{feedbacktime,jdbcType=TIMESTAMP},
      FLAG = #{flag,jdbcType=VARCHAR},
      SHOPID = #{shopid,jdbcType=VARCHAR},
      UPDATEFLAG = #{updateflag,jdbcType=VARCHAR},
      DESCR = #{descr,jdbcType=LONGVARCHAR}
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.DbAlifeedbackorder">
    update db_alifeedbackorder
    set FEEDBACKTIME = #{feedbacktime,jdbcType=TIMESTAMP},
      FLAG = #{flag,jdbcType=VARCHAR},
      SHOPID = #{shopid,jdbcType=VARCHAR},
      UPDATEFLAG = #{updateflag,jdbcType=VARCHAR}
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </update>
</mapper>