<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.DbExpressapiMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.DbExpressapi">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="SORT" jdbcType="DECIMAL" property="sort" />
    <result column="OPENFLAG" jdbcType="DECIMAL" property="openflag" />
    <result column="OPER" jdbcType="VARCHAR" property="oper" />
    <result column="OPERTIME" jdbcType="TIMESTAMP" property="opertime" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="RESERVE1" jdbcType="VARCHAR" property="reserve1" />
    <result column="RESERVE2" jdbcType="VARCHAR" property="reserve2" />
    <result column="RESERVE3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.model.DbExpressapi">
    <result column="APINAME" jdbcType="LONGVARCHAR" property="apiname" />
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SORT, OPENFLAG, OPER, OPERTIME, URL, RESERVE1, RESERVE2, RESERVE3
  </sql>
  <sql id="Blob_Column_List">
    APINAME, CONTENT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from db_expressapi
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_expressapi
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.bean.model.DbExpressapi">
    insert into db_expressapi (ID, SORT, OPENFLAG, 
      OPER, OPERTIME, URL, 
      RESERVE1, RESERVE2, RESERVE3, 
      APINAME, CONTENT)
    values (#{id,jdbcType=DECIMAL}, #{sort,jdbcType=DECIMAL}, #{openflag,jdbcType=DECIMAL}, 
      #{oper,jdbcType=VARCHAR}, #{opertime,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR}, 
      #{apiname,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.model.DbExpressapi">
    insert into db_expressapi
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="sort != null">
        SORT,
      </if>
      <if test="openflag != null">
        OPENFLAG,
      </if>
      <if test="oper != null">
        OPER,
      </if>
      <if test="opertime != null">
        OPERTIME,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="reserve1 != null">
        RESERVE1,
      </if>
      <if test="reserve2 != null">
        RESERVE2,
      </if>
      <if test="reserve3 != null">
        RESERVE3,
      </if>
      <if test="apiname != null">
        APINAME,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=DECIMAL},
      </if>
      <if test="openflag != null">
        #{openflag,jdbcType=DECIMAL},
      </if>
      <if test="oper != null">
        #{oper,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null">
        #{opertime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="apiname != null">
        #{apiname,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.DbExpressapi">
    update db_expressapi
    <set>
      <if test="sort != null">
        SORT = #{sort,jdbcType=DECIMAL},
      </if>
      <if test="openflag != null">
        OPENFLAG = #{openflag,jdbcType=DECIMAL},
      </if>
      <if test="oper != null">
        OPER = #{oper,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null">
        OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        RESERVE1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        RESERVE2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        RESERVE3 = #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="apiname != null">
        APINAME = #{apiname,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.model.DbExpressapi">
    update db_expressapi
    set SORT = #{sort,jdbcType=DECIMAL},
      OPENFLAG = #{openflag,jdbcType=DECIMAL},
      OPER = #{oper,jdbcType=VARCHAR},
      OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      URL = #{url,jdbcType=VARCHAR},
      RESERVE1 = #{reserve1,jdbcType=VARCHAR},
      RESERVE2 = #{reserve2,jdbcType=VARCHAR},
      RESERVE3 = #{reserve3,jdbcType=VARCHAR},
      APINAME = #{apiname,jdbcType=LONGVARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.DbExpressapi">
    update db_expressapi
    set SORT = #{sort,jdbcType=DECIMAL},
      OPENFLAG = #{openflag,jdbcType=DECIMAL},
      OPER = #{oper,jdbcType=VARCHAR},
      OPERTIME = #{opertime,jdbcType=TIMESTAMP},
      URL = #{url,jdbcType=VARCHAR},
      RESERVE1 = #{reserve1,jdbcType=VARCHAR},
      RESERVE2 = #{reserve2,jdbcType=VARCHAR},
      RESERVE3 = #{reserve3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>