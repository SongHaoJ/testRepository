<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.DbAlifeedbackorderMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.DbAlifeedbackorder">
    <id column="TRADEID" jdbcType="VARCHAR" property="tradeid" />
    <result column="FEEDBACKTIME" jdbcType="TIMESTAMP" property="feedbacktime" />
    <result column="FLAG" jdbcType="VARCHAR" property="flag" />
    <result column="SHOPID" jdbcType="VARCHAR" property="shopid" />
    <result column="UPDATEFLAG" jdbcType="VARCHAR" property="updateflag" />
    <result column="DESCR" jdbcType="LONGVARCHAR" property="descr" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select TRADEID, FEEDBACKTIME, FLAG, SHOPID, UPDATEFLAG, DESCR
    from db_alifeedbackorder
    where TRADEID = #{tradeid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select TRADEID, FEEDBACKTIME, FLAG, SHOPID, UPDATEFLAG, DESCR
    from db_alifeedbackorder
  </select>
  <sql id="TableName">
    db_alifeedbackorder
  </sql>
  <sql id="Values">
     #{tradeid,jdbcType=VARCHAR} , 
     #{feedbacktime,jdbcType=TIMESTAMP} , 
     #{flag,jdbcType=VARCHAR} , 
     #{shopid,jdbcType=VARCHAR} , 
     #{updateflag,jdbcType=VARCHAR} , 
     #{descr,jdbcType=LONGVARCHAR}
  </sql>
  <sql id="Columns">
    TRADEID , 
    FEEDBACKTIME , 
    FLAG , 
    SHOPID , 
    UPDATEFLAG , 
    DESCR
  </sql>
  <sql id="Criteria">
    <if test="tradeid != null">
      TRADEID = #{tradeid,jdbcType=VARCHAR} and 
    </if>
    <if test="feedbacktime != null">
      FEEDBACKTIME = #{feedbacktime,jdbcType=TIMESTAMP} and 
    </if>
    <if test="flag != null">
      FLAG = #{flag,jdbcType=VARCHAR} and 
    </if>
    <if test="shopid != null">
      SHOPID = #{shopid,jdbcType=VARCHAR} and 
    </if>
    <if test="updateflag != null">
      UPDATEFLAG = #{updateflag,jdbcType=VARCHAR} and 
    </if>
    <if test="descr != null">
      DESCR = #{descr,jdbcType=LONGVARCHAR}
    </if>
     and 1=1
  </sql>
  <sql id="UpdateCriteria">
    <if test="tradeid != null">
      TRADEID = #{tradeid,jdbcType=VARCHAR} , 
    </if>
    <if test="feedbacktime != null">
      FEEDBACKTIME = #{feedbacktime,jdbcType=TIMESTAMP} , 
    </if>
    <if test="flag != null">
      FLAG = #{flag,jdbcType=VARCHAR} , 
    </if>
    <if test="shopid != null">
      SHOPID = #{shopid,jdbcType=VARCHAR} , 
    </if>
    <if test="updateflag != null">
      UPDATEFLAG = #{updateflag,jdbcType=VARCHAR} , 
    </if>
    <if test="descr != null">
      DESCR = #{descr,jdbcType=LONGVARCHAR}
    </if>
     , 1=1
  </sql>
  <select id="selectByCriteria" parameterType="com.bean.model.DbAlifeedbackorder" resultMap="ResultMapWithBLOBs">
    select <include refid="Columns"/> from <include refid="TableName"/> where <include refid="Criteria"/> 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="String">
    delete from <include refid="TableName"/> where TRADEID=#{TRADEID}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.bean.model.DbAlifeedbackorder">
    delete from <include refid="TableName"/> where <include refid="Criteria"/>
  </delete>
  <insert id="insertByCriteria" parameterType="com.bean.model.DbAlifeedbackorder">
    insert into <include refid="TableName"/>(<include refid="Columns"/>) values(<include refid="Values"/>)
  </insert>
  <update id="updateByCriteria" parameterType="com.bean.model.DbAlifeedbackorder">
    update <include refid="TableName"/> set <include refid="UpdateCriteria"/> where <include refid="Criteria"/>
  </update>
</mapper>